# Grid Dominance Level Definition   #
#####################################
include("stdvalues")

init("2-26", "4D Chess", {b16b00b5-0001-4000-0000-000002000026}, KI_PRECALC)


Cannon(SIZE_TINY, P1, [0*2+1, 0*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [1*2+1, 0*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [2*2+1, 0*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [3*2+1, 0*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [4*2+1, 0*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [5*2+1, 0*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [6*2+1, 0*1.416 + 0.75])
Cannon(SIZE_TINY, A2, [7*2+1, 0*1.416 + 0.75])

Cannon(SIZE_TINY, N0, [0*2+1, 1*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [1*2+1, 1*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [2*2+1, 1*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [3*2+1, 1*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [4*2+1, 1*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [5*2+1, 1*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [6*2+1, 1*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [7*2+1, 1*1.416 + 0.75])

Cannon(SIZE_TINY, N0, [0*2+1, 2*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [1*2+1, 2*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [2*2+1, 2*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [3*2+1, 2*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [4*2+1, 2*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [5*2+1, 2*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [6*2+1, 2*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [7*2+1, 2*1.416 + 0.75])

Cannon(SIZE_TINY, N0, [0*2+1, 3*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [1*2+1, 3*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [2*2+1, 3*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [3*2+1, 3*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [4*2+1, 3*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [5*2+1, 3*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [6*2+1, 3*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [7*2+1, 3*1.416 + 0.75])

Cannon(SIZE_TINY, N0, [0*2+1, 4*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [1*2+1, 4*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [2*2+1, 4*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [3*2+1, 4*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [4*2+1, 4*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [5*2+1, 4*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [6*2+1, 4*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [7*2+1, 4*1.416 + 0.75])

Cannon(SIZE_TINY, N0, [0*2+1, 5*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [1*2+1, 5*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [2*2+1, 5*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [3*2+1, 5*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [4*2+1, 5*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [5*2+1, 5*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [6*2+1, 5*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [7*2+1, 5*1.416 + 0.75])

Cannon(SIZE_TINY, A3, [0*2+1, 6*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [1*2+1, 6*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [2*2+1, 6*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [3*2+1, 6*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [4*2+1, 6*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [5*2+1, 6*1.416 + 0.75])
Cannon(SIZE_TINY, N0, [6*2+1, 6*1.416 + 0.75])
Cannon(SIZE_TINY, A4, [7*2+1, 6*1.416 + 0.75])

#<map>
#
#            0 1 2 3 4 5 6 7 8 9 A B C D E F
#          # # # # # # # # # # # # # # # # # #
#                                             
#        0 #                                 #
#             O  <O> <O> <O> <O> <O> <O>  O   
#        1 #                                 #
#            <O> <O> <O> <O> <O> <O> <O> <O>  
#        2 #                                 #
#                                             
#        3 # <O> <O> <O> <O> <O> <O> <O> <O> #
#                                             
#        4 #                                 #
#            <O> <O> <O> <O> <O> <O> <O> <O>  
#        5 #                                 #
#                                             
#        6 # <O> <O> <O> <O> <O> <O> <O> <O> #
#                                             
#        7 #                                 #
#            <O> <O> <O> <O> <O> <O> <O> <O>  
#        8 #                                 #
#             O  <O> <O> <O> <O> <O> <O>  O   
#        9 #                                 #
#                                             
#          # # # # # # # # # # # # # # # # # #
#
#</map>

